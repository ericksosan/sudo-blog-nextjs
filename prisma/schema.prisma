// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  username    String    @unique
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  posts       Post[]    @relation("UserPosts")
  comments    Comment[]
  likes       Like[]
  saves       Save[]

  Post Post[]
}

model Post {
  id          String    @id @default(uuid())
  userId      String
  title       String
  content     String
  categoryId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  comments    Comment[]
  likes       Like[]
  saves       Save[]

  User User[] @relation("UserPosts")
}

model Comment {
  id          String    @id @default(uuid())
  postId      String
  userId      String
  content     String
  createdAt   DateTime  @default(now())
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  posts       Post[]
}

model Like {
  id          String    @id @default(uuid())
  userId      String
  postId      String
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Save {
  id          String    @id @default(uuid())
  userId      String
  postId      String
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
}